<launch>
	<arg name="rviz"			default="false"/>
	<arg name="rtabmap"			default="false"/>
	<arg name="map_name"		default="rtabmap.db"/>

	<arg name="base_device"		default="/dev/ttyACM0"/>
	<arg name="gripper_device"	default="/dev/ttyUSBgripper"/>
	<arg name="cam1_device" 	default="/dev/video0"/>
	<arg name="cam2_device" 	default="/dev/video1"/>
	<arg name="cam3_device" 	default="/dev/video2"/>

	<!-- cameras -->
	<include file="$(find cb_bringup)/launch/cb_realsense_bringup.launch">
		<arg name="camera1" value="true"/>
		<!-- <arg name="camera2" value="true"/> -->
		<!-- <arg name="camera3" value="true"/> -->
	</include>
	<include file="$(find usb_cam)/launch/usb_cam.launch">
		<arg name="camera"	value="cam1"/>
		<arg name="device"	value="$(arg cam1_device)"/>
	</include>
	<include file="$(find usb_cam)/launch/usb_cam.launch">
		<arg name="camera"	value="cam2"/>
		<arg name="device"	value="$(arg cam2_device)"/>
	</include>
	<include file="$(find usb_cam)/launch/usb_cam.launch">
		<arg name="camera"	value="cam3"/>
		<arg name="device"	value="$(arg cam3_device)"/>
	</include>
	<include file="$(find openni_launch)/launch/openni.launch">
		<arg name="camera" 				value="kinect1"/>
		<arg name="depth_registration" 	value="true"/>
	</include>

	<!-- base -->
	<!-- <node name="cb_odom_publisher" pkg="cb_bringup" type="base_odom_publisher.py" args="$(arg base_device)" respawn="true"/> -->

	<!-- arm -->
	<include file="$(find cb_bringup)/launch/cb_ur5_driver.launch">
		<arg name="robot_ip" 		value="192.168.2.2"/>
	</include>

	<!-- gripper -->
	<include file="$(find cb_bringup)/launch/cb_gripper_bringup.launch">
		<arg name="device"		value="$(arg gripper_device)"/>
	</include>

	<!-- urdf -->
	<include file="$(find cb_description)/launch/description.launch" />

	<!-- joint state publisher -->
	<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" >
		<rosparam param="source_list">["/ur5/joint_states", "/robotiq/joint_states"]</rosparam>
	</node>

	<!-- robot state publisher -->
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

	<!-- slam & navigation -->
	<node unless="$(arg rtabmap)" pkg="tf" type="static_transform_publisher" name="map_to_cb" args="0 0 0 0 0 0 /map /base_footprint 50" />
	<include if="$(arg rtabmap)" file="$(find cb_slam)/launch/cb_rtabmap.launch">
		<arg name="camera" 				value="kinect1"/>
		<arg name="localization"		value="true"/>
		<arg name="dwa"					value="false"/>
		<arg name="database_path" 		value="$(arg map_name)"/>
		<arg name="odom_topic"			value="/odom"/>
	</include>

	<!-- move group -->
	<include file="$(find cb_moveit_config)/launch/cb_moveit_planning_execution.launch"/>

	<!-- stitching -->
	<!-- /realsesnse1/depth/color/points -> /pcl_fusion_node_color/pcl_fusion_node/fused_points -->
	<node name="pcl_fusion_node_color" pkg="point_cloud_stitching_color" type="pcl_stitch_node_color">
		<remap from="~input_point_cloud" to="/realsense1/depth/color/points" />
		<param name="fusion_frame" 		value="base_footprint"/>
		<rosparam param="bounding_box">[-2.0,2.0,-2.0,2.0,0.0,2.0]</rosparam>
	</node>

	<!-- capturing -->
	<!-- /pcl_fusion_node_color/pcl_fusion_node/fused_points -> /captured_pcl -->
	<node name="cb_gui_pcl_execution" pkg="cb_run" type="cb_gui_pcl_execution.py" output="screen">
		<param name="captured_cloud_in"	value="/pcl_fusion_node_color/pcl_fusion_node/fused_points"/>
	</node>

	<!-- trimming -->
	<!-- /captured_pcl -> /approximate_bb/cloud_trimmed -->
  	<node pkg="tf" type="static_transform_publisher" name="map_to_pcl" args="0 0 0 0 0 0 1 /base_footprint pcl 100" />
  	<node name="approximate_bounding_box" pkg="approximate_bb" type="approximate_bounding_box" output="screen">
		<remap from="~input_point_cloud" to="/captured_pcl" />
		<param name="output_frame" value="pcl"/>
		<param name="output_point_cloud" value="/captured_pcl" />
		<param name="filename_global" value="/home/mm/cb_ws/src/mobile_disinfectant_rob/pc_to_mesh/data/test/test4.pcd"/>
  	</node>

  	<!-- plan for scan -->
  	<!-- <rosparam command="load" file="$(find cvrg_path)/config/scan_prop_1.yaml"/> -->
  	<include file="$(find cb_bringup)/launch/cb_plan_for_scan.launch"/>

	<!-- plan for clicked_point -->
	<!-- <include file="$(find cb_bringup)/launch/cb_plan_for_clicked_point.launch"/> -->

	<node if="$(arg rviz)" name="$(anon rviz)" pkg="rviz" type="rviz" args="-d $(find cb_bringup)/rviz/bringup_reduced.rviz"/>

</launch>
